{"version":3,"sources":["providers/Firebase/FirebaseContext.ts","components/InstantSurvey/LocalState.ts","components/InstantSurvey/ResponsiveText/ResponsiveText.tsx","components/InstantSurvey/ResponsiveText/index.ts","components/InstantSurvey/Answer/Answer.tsx","components/InstantSurvey/Answer/index.ts","components/InstantSurvey/WordBreak/WordBreak.tsx","components/InstantSurvey/WordBreak/index.ts","components/InstantSurvey/InstantSurvey.tsx","components/InstantSurvey/index.ts","components/AddSurvey/AddSurvey.tsx","components/AddSurvey/index.ts","components/SiteUrlQrCode/SiteUrlQrCode.tsx","components/SiteUrlQrCode/index.ts","components/Main/Main.tsx","components/Main/index.ts","providers/Firebase/Firebase.tsx","providers/Firebase/index.ts","App.tsx","reportWebVitals.ts","index.tsx","components/InstantSurvey/Answer/Answer.module.scss","components/InstantSurvey/InstantSurvey.module.scss","components/Main/Main.module.scss","components/InstantSurvey/ResponsiveText/ResponsiveText.module.scss","components/AddSurvey/AddSurvey.module.scss","components/SiteUrlQrCode/SiteUrlQrCode.module.scss"],"names":["createContext","database","undefined","userId","containerWidthState","atom","key","default","answersHeightState","ResponsiveText","text","fontSizes","useMeasure","measure","bounds","dummy","useRef","useState","fontSize","setFontSize","useLayoutEffect","current","div","document","createElement","appendChild","innerText","find","e","style","width","getBoundingClientRect","innerHTML","length","ref","className","styles","root","Answer","data","onClick","onRemove","setAnswersHeight","useSetRecoilState","state","answer","height","nextState","containerWidth","useRecoilValue","classList","add","animate","transform","top","button","block","Item","bar","percent","React","WIDTH","FONT_SIZES","item","padding","myAnswer","my","flexBasis","count","event","window","location","search","match","stopPropagation","memo","WordBreak","children","useMemo","trim","split","map","word","i","arr","whiteSpace","InstantSurvey","useContext","FirebaseContext","myId","survey","setSurvey","useEffect","on","snapshot","val","responses","selectAnswer","useCallback","set","submitNewAnswer","a","Promise","all","push","removeAnswer","answers","Object","values","filter","useSurvey","question","newAnswer","setNewAnswer","disabled","includes","tick","setTick","handleSubmit","preventDefault","answersHeight","_answers","totalCount","answerDict","reduce","accum","entries","forEach","totalHeight","sort","b","rank","Math","max","items","setContainerWidth","inner","title","total_count","onSubmit","input_wrap","type","size","onChange","target","value","placeholder","allowClear","htmlType","TextArea","Input","AddSurvey","props","draft","createdAt","Date","toISOString","setDraft","textarea","Boolean","indexOf","autoSize","minRows","spellCheck","SiteUrlQrCode","previewUri","href","replace","Main","destroyTooltipOnHide","placement","content","trigger","qrcode","cog","Firebase","setDatabase","localStorage","getItem","random","toString","substr","setItem","app","firebase","initializeApp","config","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.593c955e.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport firebase from 'firebase/app';\n\nexport default createContext<{\n  database?: firebase.database.Database;\n  userId: string;\n}>({\n  database: undefined,\n  userId: '',\n});\n","import { atom } from 'recoil';\n\nconst GUTTER = 4;\nconst INDENT = 16;\nconst DRAG_HANDLE_WIDTH = 32;\nconst ATTR_TYPE_WIDTH = 40;\nconst ATTR_NAME_WIDTH = 160;\nconst TOGGLE_BUTTON_WIDTH = 32;\nconst REMOVE_BUTTON_WIDTH = 32;\n\nexport const SIZE = {\n  GUTTER,\n  INDENT,\n  DRAG_HANDLE_WIDTH,\n  ATTR_TYPE_WIDTH,\n  ATTR_NAME_WIDTH,\n  TOGGLE_BUTTON_WIDTH,\n  REMOVE_BUTTON_WIDTH,\n  L_COLUMNS_WIDTH: DRAG_HANDLE_WIDTH + ATTR_TYPE_WIDTH + ATTR_NAME_WIDTH + 2,\n  R_COLUMNS_WIDTH: TOGGLE_BUTTON_WIDTH + REMOVE_BUTTON_WIDTH,\n};\n\nexport const containerWidthState = atom<number>({\n  key: 'containerWidthState',\n  default: 0,\n});\n\nexport const scrollLeftState = atom<number>({\n  key: 'scrollLeftState',\n  default: 0,\n});\n\nexport const tickState = atom<number>({\n  key: 'tickState',\n  default: 0,\n});\n\nexport const activeIdState = atom<string>({\n  key: 'activeIdState',\n  default: '',\n});\n\nexport const keywordState = atom<string>({\n  key: 'keywordState',\n  default: '',\n});\n\nexport const maxContentWidthState = atom<number>({\n  key: 'maxContentWidthState',\n  default: 0,\n});\n\nexport const jsonPathsState = atom<string[]>({\n  key: 'jsonPathsState',\n  default: [],\n});\n\nexport const hoverState = atom<string>({\n  key: 'hoverState',\n  default: '',\n});\n\n\nexport const answersHeightState = atom<{ [key: string]: number }>({\n  key: 'answersHeightState',\n  default: {},\n});\n","import React, { useLayoutEffect, useRef, useState } from 'react';\nimport useMeasure from 'react-use-measure'\nimport styles from './ResponsiveText.module.scss';\n\ninterface IResponsiveTextProps {\n  text: string;\n  fontSizes: string[];\n}\n\nfunction ResponsiveText({ text, fontSizes }: IResponsiveTextProps) {\n  const [measure, bounds] = useMeasure();\n\n  const dummy = useRef<HTMLDivElement>(null);\n\n  const [fontSize, setFontSize] = useState('');\n  useLayoutEffect(() => {\n    if (dummy.current) {\n      const div = document.createElement('div');\n      dummy.current.appendChild(div);\n      div.innerText = text;\n      const fontSize = fontSizes.find(e => {\n        div.style.fontSize = e;\n        return bounds.width > div.getBoundingClientRect().width;\n      });\n      dummy.current.innerHTML = '';\n      setFontSize(fontSize || fontSizes[fontSizes.length - 1]);\n    }\n  }, [bounds.width, dummy, text, fontSizes]);\n\n  return (\n    <div ref={measure} className={styles.root}>\n      <div style={{ fontSize }}>{text}</div>\n      <div className={styles.dummy} ref={dummy} />\n    </div>\n  );\n}\n\nexport default ResponsiveText;\n","import ResponsiveText from './ResponsiveText';\n\nexport default ResponsiveText;\n","import React, { useLayoutEffect, useRef } from 'react';\nimport useMeasure from 'react-use-measure'\nimport { Button } from 'antd';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { containerWidthState, answersHeightState } from '../LocalState';\nimport ResponsiveText from '../ResponsiveText';\nimport styles from './Answer.module.scss';\n\ninterface IAnswerProps {\n  data: any;\n  onClick: Function;\n  onRemove: Function;\n}\n\nfunction Answer({ data, onClick, onRemove }: IAnswerProps) {\n  const [measure, bounds] = useMeasure();\n  const setAnswersHeight = useSetRecoilState(answersHeightState);\n  useLayoutEffect(() => {\n    setAnswersHeight(state => ({ ...state, [data.answer]: bounds.height }));\n    return () => {\n      setAnswersHeight(state => {\n        const nextState = { ...state };\n        delete nextState[data.answer];\n        return nextState;\n      });\n    };\n  }, [data.answer, bounds.height, setAnswersHeight]);\n\n  const handleClick = () => {\n    onClick();\n  };\n\n  const containerWidth = useRecoilValue(containerWidthState);\n\n  const ref = useRef<HTMLDivElement>(null);\n  useLayoutEffect(() => {\n    if (ref.current) {\n      ref.current.classList.add(styles.animate);\n    }\n  }, [ref]);\n\n  return (\n    <div ref={ref} className={styles.root} style={{ transform: `translateY(${data.top}px)` }}>\n      <div ref={measure}>\n        <Button className={styles.button} onClick={handleClick} block>\n          <Item width={containerWidth} data={data} onClick={onRemove} />\n          <div className={styles.bar} style={{ width: `${data.percent * 100}%` }}>\n            <Item width={containerWidth} data={data} />\n          </div>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Answer);\n\nconst WIDTH = { MY: 44, COUNT: 50, PADDING: 16 };\n\nconst FONT_SIZES = ['2rem', '1.5rem', '1.25rem'];\n\nfunction Item({ width, data, onClick }: any) {\n\n  const handleClick = (event: any) => {\n    // 관리 모드인 경우만 지울 수 있게\n    if (window.location.search.match(/admin/) && typeof onClick === 'function') {\n      event.stopPropagation();\n      onClick();\n    }\n  };\n\n  return (\n    <div className={styles.item} style={{ width, padding: `0 ${WIDTH.PADDING}px` }}>\n      {data.myAnswer && (\n        <div className={styles.my} style={{ flexBasis: WIDTH.MY }}>👍</div>\n      )}\n      <div className={styles.answer} style={{ flexBasis: width - (data.myAnswer ? WIDTH.MY : 0) - WIDTH.COUNT - WIDTH.PADDING * 2 }}>\n        <ResponsiveText text={data.answer} fontSizes={FONT_SIZES} />\n      </div>\n      <div className={styles.count} style={{ flexBasis: WIDTH.COUNT }} onClick={handleClick}>\n        {`${(data.count)}명`}\n        <br />\n        {`${~~(data.percent * 100)}%`}\n      </div>\n    </div>\n  )\n}\n","import Answer from './Answer';\n\nexport default Answer;\n","import React, { Fragment, useMemo } from 'react';\n\ninterface IWordBreakProps {\n  text: string;\n}\n\nfunction WordBreak({ text }: IWordBreakProps) {\n  const children = useMemo(() => {\n    return (text || '').trim()\n      .split(/\\s+/)\n      .map((word: string, i: number, arr: string[]) => (\n        <Fragment key={i}>\n          <span style={{ whiteSpace: 'nowrap' }}>{word}</span>\n          {i < arr.length - 1 ? ' ' : ''}\n        </Fragment>\n      ));\n  }, [text]);\n  return <>{children}</>;\n}\n\nexport default WordBreak;\n","import WordBreak from './WordBreak';\n\nexport default WordBreak;\n","import { ChangeEvent, useContext, useCallback, useEffect, useMemo, useLayoutEffect, useState } from 'react';\nimport { RecoilRoot, useSetRecoilState, useRecoilValue } from 'recoil';\nimport FirebaseContext from '../../providers/Firebase/FirebaseContext';\nimport useMeasure from 'react-use-measure'\nimport Answer from './Answer';\nimport { containerWidthState, answersHeightState } from './LocalState';\nimport { Input, Button } from 'antd'\nimport WordBreak from './WordBreak';\nimport styles from './InstantSurvey.module.scss';\n\nconst GUTTER = 10;\n\nfunction InstantSurvey() {\n  const { question, answers, responses, myAnswer, selectAnswer, submitNewAnswer } = useSurvey();\n\n  const [newAnswer, setNewAnswer] = useState('');\n  const disabled = !newAnswer || Object.values(answers || {}).includes(newAnswer);\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setNewAnswer(event.target.value.trim());\n  };\n  const [tick, setTick] = useState(0);\n  const handleSubmit: any = async (event: any) => {\n    event.preventDefault();\n    submitNewAnswer(newAnswer);\n    setNewAnswer('');\n    setTick(state => state + 1);\n  };\n\n  const answersHeight = useRecoilValue(answersHeightState);\n  const [items, totalCount, height] = useMemo(() => {\n    const _answers = Object.values(answers || {});\n\n    let totalCount = 0;\n    let answerDict: any = _answers.reduce((accum: any, answer: any) => ({\n      ...accum,\n      [answer]: { answer, count: 0 },\n    }), {});\n    Object.entries((responses || {})).forEach(([, answer]: any) => {\n      if (answer in answerDict) {\n        totalCount++;\n        answerDict[answer].count++;\n      }\n    });\n\n    let totalHeight = 0;\n    const compareCount = (a: any, b: any) => a?.count === b?.count ? 0 : a?.count < b?.count ? 1 : -1;\n    answerDict = Object.values(answerDict)\n      .sort(compareCount)\n      .reduce((accum: any, data: any, i) => {\n        const top = totalHeight;\n        totalHeight = totalHeight + (answersHeight[data.answer] || 0) + GUTTER;\n        return {\n          ...accum,\n          [data.answer]: {\n            ...data,\n            rank: i,\n            percent: data.count / Math.max(totalCount, 1),\n            top,\n            myAnswer: myAnswer === data.answer,\n          },\n        };\n      }, {});\n\n    return [\n      _answers.map((answer: any) => ({ answer, ...answerDict[answer], })),\n      totalCount,\n      totalHeight,\n    ];\n  }, [myAnswer, answers, responses, answersHeight]);\n\n  const setContainerWidth = useSetRecoilState(containerWidthState);\n  const [measure, bounds] = useMeasure();\n  useLayoutEffect(() => {\n    setContainerWidth(bounds.width);\n  }, [setContainerWidth, bounds.width]);\n\n  return (\n    <div className={styles.root} ref={measure}>\n      <div className={styles.inner}>\n        <h1 className={styles.title}>\n          <WordBreak text={question} />\n        </h1>\n        <div className={styles.total_count}>전체 {totalCount}명</div>\n        <div className={styles.answers} style={{ height }}>\n          {items.map((data: any, i) => {\n            const handleClick = () => {\n              selectAnswer(data.answer);\n            };\n            const handleRemove = () => {\n              // removeAnswer(data.answer);\n            };\n            return <Answer key={i} data={data} onClick={handleClick} onRemove={handleRemove} />;\n          })}\n        </div>\n        <form onSubmit={handleSubmit}>\n          <div className={styles.input_wrap}>\n            <Input\n              key={tick}\n              type=\"text\"\n              size=\"large\"\n              onChange={handleChange}\n              placeholder=\"추가 의견을 남겨주세요.\"\n              allowClear\n            />\n            <Button size=\"large\" type=\"primary\" htmlType=\"submit\" disabled={disabled}>확인</Button>\n          </div>\n        </form>\n      </div>\n    </div >\n  );\n}\n\nexport default function InstantSurveyWrap() {\n  return (\n    <RecoilRoot>\n      <InstantSurvey />\n    </RecoilRoot>\n  );\n};\n\nfunction useSurvey() {\n  const { database, userId: myId } = useContext(FirebaseContext);\n\n  const [survey, setSurvey] = useState<any>({});\n  useEffect(() => {\n    database?.ref('/current-survey').on('value', (snapshot) => {\n      const data = snapshot.val();\n      setSurvey(data);\n    });\n  }, [database]);\n\n  const myAnswer = survey?.responses?.[myId];\n\n  const selectAnswer = useCallback((answer: string) => {\n    database?.ref(`/current-survey/responses/${myId}`).set(myAnswer === answer ? null : answer);\n  }, [database, myId, myAnswer]);\n\n  const submitNewAnswer = useCallback(async (answer: string) => {\n    await Promise.all([\n      database?.ref('/current-survey/answers').push(answer),\n      database?.ref(`/current-survey/responses/${myId}`).set(answer),\n    ]);\n  }, [database, myId]);\n\n  const removeAnswer = useCallback((answer: string) => {\n    const answers = Object.values(survey?.answers || {});\n    database?.ref('/current-survey/answers').set(answers.filter(e => e !== answer));\n  }, [database, survey]);\n\n  return useMemo(() => ({ ...survey, myId, myAnswer, selectAnswer, submitNewAnswer, removeAnswer }), [survey, myId, myAnswer, selectAnswer, submitNewAnswer, removeAnswer]);\n}\n","import InstantSurvey from './InstantSurvey';\n\nexport default InstantSurvey;\n","import React, { useContext, useState, ChangeEvent } from 'react';\nimport { Button, Input } from 'antd';\nimport FirebaseContext from '../../providers/Firebase/FirebaseContext';\nimport styles from './AddSurvey.module.scss';\n\nconst { TextArea } = Input;\n\ninterface IAddSurveyProps {\n  message?: string;\n}\n\nfunction useFilebase() {\n  const { database } = useContext(FirebaseContext);\n  return database;\n}\n\nfunction AddSurvey(props: IAddSurveyProps) {\n\n  const database = useFilebase();\n\n  // const [question, setQuestion] = useState<string>('');\n  // const handleQuestionChange = (event: ChangeEvent<HTMLInputElement>) => {\n  //   setQuestion(event.target.value.trim());\n  // };\n\n  // const [answers, setAnswers] = useState<{ seq: number, value: string }[]>([]);\n  // const answerSeq = useRef(0);\n  // const items = useMemo(() => {\n  //   if (answers.filter(value => !value).length === 0) {\n  //     return [...answers, { seq: answerSeq.current++, value: '' }];\n  //   }\n  //   return answers;\n  // }, [answers, answerSeq]);\n\n  // const survey = useMemo(() => ({\n  //   question,\n  //   answers: answers\n  //     .map(({ value }) => value)\n  //     .filter(Boolean)\n  //     .filter((e, i, arr) => arr.indexOf(e) === i),\n  // }), [question, answers]);\n\n  const [tick, setTick] = useState(0);\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    await database?.ref('/current-survey').set({\n      ...draft,\n      createdAt: (new Date()).toISOString(),\n    });\n    setDraft({ question: '', answers: [''] });\n    setTick(state => state + 1);\n  };\n\n  const [draft, setDraft] = useState({ question: '', answers: [''] });\n  const handleTextChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const [question, ...answers] = event.target.value\n      .split('\\n')\n      .map(e => e.trim())\n      .filter(Boolean)\n      .filter((e, i, arr) => arr.indexOf(e) === i);\n    setDraft({ question, answers });\n  };\n\n  return (\n    <div className={styles.root}>\n      <form onSubmit={handleSubmit}>\n        <TextArea\n          key={tick}\n          className={styles.textarea}\n          // defaultValue={smpl}\n          onChange={handleTextChange}\n          // placeholder=\"Controlled autosize\"\n          autoSize={{ minRows: 5 }}\n          spellCheck={false}\n        />\n        {/* <Input\n          type=\"text\"\n          onChange={handleQuestionChange}\n          addonBefore=\"Q\"\n          size=\"large\"\n        />\n        {items.map((item, i) => {\n          const handleAnswerChange = (event: ChangeEvent<HTMLInputElement>) => {\n            setAnswers(values => [\n              ...values.slice(0, i),\n              { seq: item.seq, value: event.target.value.trim() },\n              ...values.slice(i + 1),\n            ]);\n          };\n          return (\n            <div key={item.seq}>\n              <Input.Group compact>\n                <Input\n                  type=\"text\"\n                  onChange={handleAnswerChange}\n                  addonBefore={i + 1}\n                  size=\"large\"\n                />\n              </Input.Group>\n            </div>\n          )\n        })} */}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          htmlType=\"submit\"\n          disabled={!(draft.question && draft.answers.length > 1)}\n          block\n        >\n          submit\n      </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddSurvey;\n\n","import AddSurvey from './AddSurvey';\n\nexport default AddSurvey;\n","import React from 'react';\nimport QRCode from 'qrcode.react';\nimport styles from './SiteUrlQrCode.module.scss';\n\nfunction SiteUrlQrCode() {\n  const previewUri = window.location.href\n    .replace(/&admin/, '')\n    .replace(/\\?admin$/, '')\n    .replace(/\\?admin/, '?');\n  return (\n    <div className={styles.root}>\n      <QRCode value={previewUri} />\n    </div>\n  );\n}\n\nexport default SiteUrlQrCode;\n","import SiteUrlQrCode from './SiteUrlQrCode';\n\nexport default SiteUrlQrCode;\n","import React from 'react';\nimport { Popover, Button } from 'antd';\nimport InstantSurvey from '../InstantSurvey';\nimport AddSurvey from '../AddSurvey';\nimport SiteUrlQrCode from '../SiteUrlQrCode';\nimport styles from './Main.module.scss';\n\nfunction Main() {\n  return (\n    <div className=\"container\">\n      <div className={styles.root}>\n        <InstantSurvey />\n        <Popover destroyTooltipOnHide placement=\"bottomRight\" content={<SiteUrlQrCode />} trigger=\"click\">\n          <Button type=\"link\" className={styles.qrcode}><i className=\"material-icons\">qr_code_2</i></Button>\n        </Popover>\n        {window.location.search.match(/admin/) && (\n          <Popover destroyTooltipOnHide placement=\"topRight\" content={<AddSurvey />} trigger=\"click\">\n            <Button type=\"link\" className={styles.cog}><i className=\"material-icons\">settings</i></Button>\n          </Popover>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import Main from './Main';\n\nexport default Main;\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport FirebaseContext from './FirebaseContext';\nimport config from '../../config.json';\n\ninterface IFirebaseProps {\n  children?: React.ReactNode;\n}\n\nfunction Firebase({ children }: IFirebaseProps) {\n  const [database, setDatabase] = useState<firebase.database.Database>();\n\n  const [userId] = useState(() => {\n    let userId = localStorage.getItem('user-id');\n    if (!userId) {\n      userId = Math.random().toString(36).substr(-8);\n      localStorage.setItem('user-id', userId);\n    }\n    return userId;\n  })\n\n  useEffect(() => {\n    const app = firebase.initializeApp(config.firebase);\n    setDatabase(app.database());\n  }, []);\n\n  return database ? (\n    <FirebaseContext.Provider value={{ database, userId }}>\n      {children}\n    </FirebaseContext.Provider>\n  ) : null;\n}\n\nexport default Firebase;\n","import Firebase from './Firebase';\n\nexport default Firebase;\n","import React from 'react';\nimport Main from './components/Main';\nimport Firebase from './providers/Firebase';\n\nfunction App() {\n  return (\n    <Firebase>\n      <Main />\n    </Firebase>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Answer_root__2pq4A\",\"animate\":\"Answer_animate__3cNGN\",\"button\":\"Answer_button__3llNr\",\"bar\":\"Answer_bar__CHkP2\",\"item\":\"Answer_item__3bULz\",\"my\":\"Answer_my__RC-Cs\",\"answer\":\"Answer_answer__3QepJ\",\"count\":\"Answer_count__3DShc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InstantSurvey_root__1vFpt\",\"inner\":\"InstantSurvey_inner__2F1OO\",\"title\":\"InstantSurvey_title__3RpJq\",\"answers\":\"InstantSurvey_answers__1ZJMl\",\"total_count\":\"InstantSurvey_total_count__2kmka\",\"input_wrap\":\"InstantSurvey_input_wrap__1aN55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qrcode\":\"Main_qrcode__30a1k\",\"cog\":\"Main_cog__1wdKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ResponsiveText_root__1Ds0_\",\"dummy\":\"ResponsiveText_dummy__1f85y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddSurvey_root__3IKt1\",\"item\":\"AddSurvey_item__35jFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SiteUrlQrCode_root__9zKH5\"};"],"sourceRoot":""}