{"version":3,"sources":["components/InstantSurvey/Answer/Answer.module.scss","components/InstantSurvey/InstantSurvey.module.scss","components/InstantSurvey/ResponsiveText/ResponsiveText.module.scss","components/Main/Main.module.scss","components/AddSurvey/AddSurvey.module.scss","providers/Firebase/FirebaseContext.ts","components/InstantSurvey/LocalState.ts","components/InstantSurvey/ResponsiveText/ResponsiveText.tsx","components/InstantSurvey/ResponsiveText/index.ts","components/InstantSurvey/Answer/Answer.tsx","components/InstantSurvey/Answer/index.ts","components/InstantSurvey/WordBreak/WordBreak.tsx","components/InstantSurvey/WordBreak/index.ts","components/InstantSurvey/InstantSurvey.tsx","components/InstantSurvey/index.ts","components/AddSurvey/AddSurvey.tsx","components/AddSurvey/index.ts","components/Main/Main.tsx","components/Main/index.ts","providers/Firebase/Firebase.tsx","providers/Firebase/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","createContext","database","undefined","userId","containerWidthState","atom","key","default","answersHeightState","ResponsiveText","text","fontSizes","useMeasure","measure","bounds","dummy","useRef","useState","fontSize","setFontSize","useLayoutEffect","current","div","document","createElement","appendChild","innerText","find","e","style","width","getBoundingClientRect","innerHTML","length","ref","className","styles","root","Answer","data","onClick","setAnswersHeight","useSetRecoilState","state","answer","height","nextState","containerWidth","useRecoilValue","classList","add","animate","transform","top","button","block","Item","bar","percent","React","WIDTH","FONT_SIZES","item","padding","myAnswer","my","flexBasis","count","memo","WordBreak","children","useMemo","trim","split","map","word","i","arr","whiteSpace","InstantSurvey","useContext","FirebaseContext","myId","survey","setSurvey","useEffect","on","snapshot","val","responses","selectAnswer","useCallback","set","submitNewAnswer","a","Promise","all","push","useSurvey","question","answers","newAnswer","setNewAnswer","disabled","Object","values","includes","tick","setTick","handleSubmit","event","preventDefault","answersHeight","_answers","totalCount","answerDict","reduce","accum","entries","forEach","totalHeight","sort","b","rank","Math","max","items","setContainerWidth","title","onSubmit","input_wrap","type","size","onChange","target","value","placeholder","allowClear","htmlType","AddSurvey","props","setQuestion","setAnswers","answerSeq","filter","seq","Boolean","indexOf","createdAt","Date","toISOString","addonBefore","Group","compact","slice","Main","window","location","search","destroyTooltipOnHide","placement","content","trigger","cog","Firebase","setDatabase","localStorage","getItem","random","toString","substr","setItem","app","firebase","initializeApp","config","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ca51cbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Answer_root__2pq4A\",\"animate\":\"Answer_animate__3cNGN\",\"button\":\"Answer_button__3llNr\",\"bar\":\"Answer_bar__CHkP2\",\"item\":\"Answer_item__3bULz\",\"my\":\"Answer_my__RC-Cs\",\"answer\":\"Answer_answer__3QepJ\",\"count\":\"Answer_count__3DShc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InstantSurvey_root__1vFpt\",\"title\":\"InstantSurvey_title__3RpJq\",\"answers\":\"InstantSurvey_answers__1ZJMl\",\"input_wrap\":\"InstantSurvey_input_wrap__1aN55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ResponsiveText_root__1Ds0_\",\"dummy\":\"ResponsiveText_dummy__1f85y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cog\":\"Main_cog__1wdKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddSurvey_root__3IKt1\",\"item\":\"AddSurvey_item__35jFS\"};","import { createContext } from 'react';\nimport firebase from 'firebase/app';\n\nexport default createContext<{\n  database?: firebase.database.Database;\n  userId: string;\n}>({\n  database: undefined,\n  userId: '',\n});\n","import { atom } from 'recoil';\n\nconst GUTTER = 4;\nconst INDENT = 16;\nconst DRAG_HANDLE_WIDTH = 32;\nconst ATTR_TYPE_WIDTH = 40;\nconst ATTR_NAME_WIDTH = 160;\nconst TOGGLE_BUTTON_WIDTH = 32;\nconst REMOVE_BUTTON_WIDTH = 32;\n\nexport const SIZE = {\n  GUTTER,\n  INDENT,\n  DRAG_HANDLE_WIDTH,\n  ATTR_TYPE_WIDTH,\n  ATTR_NAME_WIDTH,\n  TOGGLE_BUTTON_WIDTH,\n  REMOVE_BUTTON_WIDTH,\n  L_COLUMNS_WIDTH: DRAG_HANDLE_WIDTH + ATTR_TYPE_WIDTH + ATTR_NAME_WIDTH + 2,\n  R_COLUMNS_WIDTH: TOGGLE_BUTTON_WIDTH + REMOVE_BUTTON_WIDTH,\n};\n\nexport const containerWidthState = atom<number>({\n  key: 'containerWidthState',\n  default: 0,\n});\n\nexport const scrollLeftState = atom<number>({\n  key: 'scrollLeftState',\n  default: 0,\n});\n\nexport const tickState = atom<number>({\n  key: 'tickState',\n  default: 0,\n});\n\nexport const activeIdState = atom<string>({\n  key: 'activeIdState',\n  default: '',\n});\n\nexport const keywordState = atom<string>({\n  key: 'keywordState',\n  default: '',\n});\n\nexport const maxContentWidthState = atom<number>({\n  key: 'maxContentWidthState',\n  default: 0,\n});\n\nexport const jsonPathsState = atom<string[]>({\n  key: 'jsonPathsState',\n  default: [],\n});\n\nexport const hoverState = atom<string>({\n  key: 'hoverState',\n  default: '',\n});\n\n\nexport const answersHeightState = atom<{ [key: string]: number }>({\n  key: 'answersHeightState',\n  default: {},\n});\n","import React, { useLayoutEffect, useRef, useState } from 'react';\nimport useMeasure from 'react-use-measure'\nimport styles from './ResponsiveText.module.scss';\n\ninterface IResponsiveTextProps {\n  text: string;\n  fontSizes: string[];\n}\n\nfunction ResponsiveText({ text, fontSizes }: IResponsiveTextProps) {\n  const [measure, bounds] = useMeasure();\n\n  const dummy = useRef<HTMLDivElement>(null);\n\n  const [fontSize, setFontSize] = useState('');\n  useLayoutEffect(() => {\n    if (dummy.current) {\n      const div = document.createElement('div');\n      dummy.current.appendChild(div);\n      div.innerText = text;\n      const fontSize = fontSizes.find(e => {\n        div.style.fontSize = e;\n        return bounds.width > div.getBoundingClientRect().width;\n      });\n      dummy.current.innerHTML = '';\n      setFontSize(fontSize || fontSizes[fontSizes.length - 1]);\n    }\n  }, [bounds.width, dummy, text, fontSizes]);\n\n  return (\n    <div ref={measure} className={styles.root}>\n      <div style={{ fontSize }}>{text}</div>\n      <div className={styles.dummy} ref={dummy} />\n    </div>\n  );\n}\n\nexport default ResponsiveText;\n","import ResponsiveText from './ResponsiveText';\n\nexport default ResponsiveText;\n","import React, { useLayoutEffect, useRef } from 'react';\nimport useMeasure from 'react-use-measure'\nimport { Button } from 'antd';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { containerWidthState, answersHeightState } from '../LocalState';\nimport ResponsiveText from '../ResponsiveText';\nimport styles from './Answer.module.scss';\n\ninterface IAnswerProps {\n  data: any;\n  onClick: Function;\n}\n\nfunction Answer({ data, onClick }: IAnswerProps) {\n  const [measure, bounds] = useMeasure();\n  const setAnswersHeight = useSetRecoilState(answersHeightState);\n  useLayoutEffect(() => {\n    setAnswersHeight(state => ({ ...state, [data.answer]: bounds.height }));\n    return () => {\n      setAnswersHeight(state => {\n        const nextState = { ...state };\n        delete nextState[data.answer];\n        return nextState;\n      });\n    };\n  }, [data.answer, bounds.height, setAnswersHeight]);\n\n  const handleClick = () => {\n    onClick();\n  };\n\n  const containerWidth = useRecoilValue(containerWidthState);\n\n  const ref = useRef<HTMLDivElement>(null);\n  useLayoutEffect(() => {\n    if (ref.current) {\n      ref.current.classList.add(styles.animate);\n    }\n  }, [ref]);\n\n  return (\n    <div ref={ref} className={styles.root} style={{ transform: `translateY(${data.top}px)` }}>\n      <div ref={measure}>\n        <Button className={styles.button} onClick={handleClick} block>\n          <Item width={containerWidth} data={data} />\n          <div className={styles.bar} style={{ width: `${data.percent * 100}%` }}>\n            <Item width={containerWidth} data={data} />\n          </div>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Answer);\n\nconst WIDTH = { MY: 44, COUNT: 50, PADDING: 16 };\n\nconst FONT_SIZES = ['2rem', '1.5rem', '1.25rem'];\n\nfunction Item({ width, data }: any) {\n  return (\n    <div className={styles.item} style={{ width, padding: `0 ${WIDTH.PADDING}px` }}>\n      {data.myAnswer && (\n        <div className={styles.my} style={{ flexBasis: WIDTH.MY }}>👍</div>\n      )}\n      <div className={styles.answer} style={{ flexBasis: width - (data.myAnswer ? WIDTH.MY : 0) - WIDTH.COUNT - WIDTH.PADDING * 2 }}>\n        <ResponsiveText text={data.answer} fontSizes={FONT_SIZES} />\n      </div>\n      <div className={styles.count} style={{ flexBasis: WIDTH.COUNT }}>\n        {`${(data.count)}명`}\n        <br />\n        {`${~~(data.percent * 100)}%`}\n      </div>\n    </div>\n  )\n}\n","import Answer from './Answer';\n\nexport default Answer;\n","import React, { Fragment, useMemo } from 'react';\n\ninterface IWordBreakProps {\n  text: string;\n}\n\nfunction WordBreak({ text }: IWordBreakProps) {\n  const children = useMemo(() => {\n    return (text || '').trim()\n      .split(/\\s+/)\n      .map((word: string, i: number, arr: string[]) => (\n        <Fragment key={i}>\n          <span style={{ whiteSpace: 'nowrap' }}>{word}</span>\n          {i < arr.length - 1 ? ' ' : ''}\n        </Fragment>\n      ));\n  }, [text]);\n  return <>{children}</>;\n}\n\nexport default WordBreak;\n","import WordBreak from './WordBreak';\n\nexport default WordBreak;\n","import { ChangeEvent, useContext, useCallback, useEffect, useMemo, useLayoutEffect, useState } from 'react';\nimport { RecoilRoot, useSetRecoilState, useRecoilValue } from 'recoil';\nimport FirebaseContext from '../../providers/Firebase/FirebaseContext';\nimport useMeasure from 'react-use-measure'\nimport Answer from './Answer';\nimport { containerWidthState, answersHeightState } from './LocalState';\nimport { Input, Button } from 'antd'\nimport WordBreak from './WordBreak';\nimport styles from './InstantSurvey.module.scss';\n\nconst GUTTER = 10;\n\nfunction InstantSurvey() {\n  const { question, answers, responses, myAnswer, selectAnswer, submitNewAnswer } = useSurvey();\n\n  const [newAnswer, setNewAnswer] = useState('');\n  const disabled = !newAnswer || Object.values(answers || {}).includes(newAnswer);\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setNewAnswer(event.target.value.trim());\n  };\n  const [tick, setTick] = useState(0);\n  const handleSubmit: any = async (event: any) => {\n    event.preventDefault();\n    submitNewAnswer(newAnswer);\n    setTick(state => state + 1);\n  };\n\n  const answersHeight = useRecoilValue(answersHeightState);\n  const [items, height] = useMemo(() => {\n    const _answers = Object.values(answers || {});\n\n    let totalCount = 0;\n    let answerDict: any = _answers.reduce((accum: any, answer: any) => ({\n      ...accum,\n      [answer]: { answer, count: 0 },\n    }), {});\n    Object.entries((responses || {})).forEach(([, answer]: any) => {\n      if (answer in answerDict) {\n        totalCount++;\n        answerDict[answer].count++;\n      }\n    });\n\n    let totalHeight = 0;\n    const compareCount = (a: any, b: any) => a?.count === b?.count ? 0 : a?.count < b?.count ? 1 : -1;\n    answerDict = Object.values(answerDict)\n      .sort(compareCount)\n      .reduce((accum: any, data: any, i) => {\n        const top = totalHeight;\n        totalHeight = totalHeight + (answersHeight[data.answer] || 0) + GUTTER;\n        return {\n          ...accum,\n          [data.answer]: {\n            ...data,\n            rank: i,\n            percent: data.count / Math.max(totalCount, 1),\n            top,\n            myAnswer: myAnswer === data.answer,\n          },\n        };\n      }, {});\n\n    return [\n      _answers.map((answer: any) => ({ answer, ...answerDict[answer], })),\n      totalHeight,\n    ];\n  }, [myAnswer, answers, responses, answersHeight]);\n\n  const setContainerWidth = useSetRecoilState(containerWidthState);\n  const [measure, bounds] = useMeasure();\n  useLayoutEffect(() => {\n    setContainerWidth(bounds.width);\n  }, [setContainerWidth, bounds.width]);\n\n  return (\n    <div className={styles.root} ref={measure}>\n      <h1 className={styles.title}>\n        <WordBreak text={question} />\n      </h1>\n      <div className={styles.answers} style={{ height }}>\n        {items.map((data: any, i) => {\n          const handleClick = () => {\n            selectAnswer(data.answer);\n          };\n          return <Answer key={i} data={data} onClick={handleClick} />;\n        })}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div className={styles.input_wrap}>\n          <Input\n            key={tick}\n            type=\"text\"\n            size=\"large\"\n            onChange={handleChange}\n            placeholder=\"추가 의견을 남겨주세요.\"\n            allowClear\n          />\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" disabled={disabled}>확인</Button>\n        </div>\n      </form>\n    </div >\n  );\n}\n\nexport default function InstantSurveyWrap() {\n  return (\n    <RecoilRoot>\n      <InstantSurvey />\n    </RecoilRoot>\n  );\n};\n\nfunction useSurvey() {\n  const { database, userId: myId } = useContext(FirebaseContext);\n\n  const [survey, setSurvey] = useState<any>({});\n  useEffect(() => {\n    database?.ref('/current-survey').on('value', (snapshot) => {\n      const data = snapshot.val();\n      setSurvey(data);\n    });\n  }, [database]);\n\n  const myAnswer = survey?.responses?.[myId];\n\n  const selectAnswer = useCallback((answer: string) => {\n    database?.ref(`/current-survey/responses/${myId}`).set(myAnswer === answer ? null : answer);\n  }, [database, myId, myAnswer]);\n\n  const submitNewAnswer = useCallback(async (answer: string) => {\n    await Promise.all([\n      database?.ref('/current-survey/answers').push(answer),\n      database?.ref(`/current-survey/responses/${myId}`).set(answer),\n    ]);\n  }, [database, myId]);\n\n  return useMemo(() => ({ ...survey, myId, myAnswer, selectAnswer, submitNewAnswer }), [survey, myId, myAnswer, selectAnswer, submitNewAnswer]);\n}\n","import InstantSurvey from './InstantSurvey';\n\nexport default InstantSurvey;\n","import React, { useContext, useMemo, useState, useRef, ChangeEvent } from 'react';\nimport { Button, Input } from 'antd';\nimport FirebaseContext from '../../providers/Firebase/FirebaseContext';\nimport styles from './AddSurvey.module.scss';\n\ninterface IAddSurveyProps {\n  message?: string;\n}\n\nfunction useFilebase() {\n  const { database } = useContext(FirebaseContext);\n  return database;\n}\n\nfunction AddSurvey(props: IAddSurveyProps) {\n\n  const database = useFilebase();\n\n  const [question, setQuestion] = useState<string>('');\n  const handleQuestionChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(event.target.value.trim());\n  };\n\n  const [answers, setAnswers] = useState<{ seq: number, value: string }[]>([]);\n  const answerSeq = useRef(0);\n  const items = useMemo(() => {\n    if (answers.filter(value => !value).length === 0) {\n      return [...answers, { seq: answerSeq.current++, value: '' }];\n    }\n    return answers;\n  }, [answers, answerSeq]);\n\n  const survey = useMemo(() => ({\n    question,\n    answers: answers\n      .map(({ value }) => value)\n      .filter(Boolean)\n      .filter((e, i, arr) => arr.indexOf(e) === i),\n  }), [question, answers]);\n\n  const handleSubmit = async () => {\n    await database?.ref('/current-survey').set({\n      ...survey,\n      createdAt: (new Date()).toISOString(),\n    });\n  }\n\n  return (\n    <div className={styles.root}>\n      <Input\n        type=\"text\"\n        onChange={handleQuestionChange}\n        addonBefore=\"Q\"\n        size=\"large\"\n      />\n      {items.map((item, i) => {\n        const handleAnswerChange = (event: ChangeEvent<HTMLInputElement>) => {\n          setAnswers(values => [\n            ...values.slice(0, i),\n            { seq: item.seq, value: event.target.value.trim() },\n            ...values.slice(i + 1),\n          ]);\n        };\n        return (\n          <div key={item.seq}>\n            <Input.Group compact>\n              <Input\n                type=\"text\"\n                onChange={handleAnswerChange}\n                addonBefore={i + 1}\n                size=\"large\"\n              />\n            </Input.Group>\n          </div>\n        )\n      })}\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={handleSubmit}\n        disabled={!(survey.question && survey.answers.length > 1)}\n        block\n      >\n        submit\n      </Button>\n    </div>\n  );\n}\n\nexport default AddSurvey;\n\n","import AddSurvey from './AddSurvey';\n\nexport default AddSurvey;\n","import React from 'react';\nimport { Popover, Button } from 'antd';\nimport InstantSurvey from '../InstantSurvey';\nimport AddSurvey from '../AddSurvey';\nimport styles from './Main.module.scss';\n\nfunction Main() {\n  return (\n    <div className=\"container\">\n      <div className={styles.root}>\n        <InstantSurvey />\n        {window.location.search && (\n          <Popover destroyTooltipOnHide placement=\"bottomRight\" content={<AddSurvey />} trigger=\"click\">\n            <Button type=\"link\" className={styles.cog}><i className=\"material-icons\">settings</i></Button>\n          </Popover>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import Main from './Main';\n\nexport default Main;\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport FirebaseContext from './FirebaseContext';\nimport config from '../../config.json';\n\ninterface IFirebaseProps {\n  children?: React.ReactNode;\n}\n\nfunction Firebase({ children }: IFirebaseProps) {\n  const [database, setDatabase] = useState<firebase.database.Database>();\n\n  const [userId] = useState(() => {\n    let userId = localStorage.getItem('user-id');\n    if (!userId) {\n      userId = Math.random().toString(36).substr(-8);\n      localStorage.setItem('user-id', userId);\n    }\n    return userId;\n  })\n\n  useEffect(() => {\n    const app = firebase.initializeApp(config.firebase);\n    setDatabase(app.database());\n  }, []);\n\n  return database ? (\n    <FirebaseContext.Provider value={{ database, userId }}>\n      {children}\n    </FirebaseContext.Provider>\n  ) : null;\n}\n\nexport default Firebase;\n","import Firebase from './Firebase';\n\nexport default Firebase;\n","import React from 'react';\nimport Main from './components/Main';\nimport Firebase from './providers/Firebase';\n\nfunction App() {\n  return (\n    <Firebase>\n      <Main />\n    </Firebase>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}